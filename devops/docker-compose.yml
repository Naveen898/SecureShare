version: '3.9'

services:
  backend:
    image: ${BACKEND_IMAGE:-secureshare-backend:latest}
    build:
      context: ..
      dockerfile: backend/Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL:-sqlite+aiosqlite:///./vaultupload.db}
      STORAGE_BACKEND: ${STORAGE_BACKEND:-s3}
      AWS_REGION: ${AWS_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      FRONTEND_BASE_URL: ${FRONTEND_BASE_URL:-http://localhost}
      HCAPTCHA_ENABLED: ${HCAPTCHA_ENABLED:-0}
      MFA_ADMIN_ENABLED: ${MFA_ADMIN_ENABLED:-0}
      NOTIFY_ON_DOWNLOAD: ${NOTIFY_ON_DOWNLOAD:-0}
      NOTIFY_OWNER_ON_TRANSFER: ${NOTIFY_OWNER_ON_TRANSFER:-1}
      JWT_SECRET: ${JWT_SECRET:-devsecret}
    expose:
      - "8000"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_REGION}
        awslogs-group: /secureshare/backend
        awslogs-stream: backend
    depends_on:
      - db

  frontend:
    image: ${FRONTEND_IMAGE:-secureshare-frontend:latest}
    build:
      context: ..
      dockerfile: frontend/Dockerfile
    ports:
      - "80:80"
    environment:
      - API_BASE=http://localhost
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_REGION}
        awslogs-group: /secureshare/frontend
        awslogs-stream: frontend
    depends_on:
      - backend

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-secureshare}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secureshare}
      POSTGRES_DB: ${POSTGRES_DB:-securesharedb}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_REGION}
        awslogs-group: /secureshare/postgres
        awslogs-stream: postgres

volumes:
  db_data: